import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as n,c as s,f as e}from"./app-GpbInDPd.js";const t={},p=e(`<h1 id="springmvc-cache-的使用" tabindex="-1"><a class="header-anchor" href="#springmvc-cache-的使用" aria-hidden="true">#</a> SpringMvc Cache 的使用</h1><p>这个使用步骤很简单，第一步导入maven坐标，第二步在我们的启动类上加上注解@EnableCaching 注解加完以后我们就可以使用这个缓存工具了。</p><p>它提供了3个方法：</p><p>1.@CaCheable,这个注解表示在方法执行前先查询缓存中是否有数据，如果有数据，则直接返回缓存数据；如果没有缓存数据，调用方法并将方法返回值放到缓存中。使用示例：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Cacheable</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;***&quot;</span><span class="token punctuation">,</span>key <span class="token operator">=</span> <span class="token string">&quot;#***&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这个注解里面常用的两个参数就是上面的，value代表存储在redis缓存中的文件的名字，这个缓存添加形式是：name(value).empty.key（key）:value，#***，代表向方法体取值。</p><p>2.@CachePut这个注解表示将方法的返回值放到缓存中</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>@CachePut(value = &quot;***&quot;,key = &quot;***&quot;)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数和上面的没有太大区别，只不过是添加一条数据.</p><p>3.@CacheEvict这个注解将一条或多条数据从缓存中删除</p><p>删除一条数据</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@CacheEvict</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;***&quot;</span><span class="token punctuation">,</span>key <span class="token operator">=</span> <span class="token string">&quot;***&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>删除全部数据</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@CacheEvict</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;***&quot;</span><span class="token punctuation">,</span>allEntries<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,14),c=[p];function o(i,l){return n(),s("div",null,c)}const d=a(t,[["render",o],["__file","SpringMvc Cache 的使用.html.vue"]]);export{d as default};
